c# 2.0 
partial class service -> class level service
c# 3.0 
partial method -> declare service
c# 9.0 
partial method -> implement service = source-generation
Nullable, if null 지원
c# 13.0
partial property -> property 수준으로 올라옴. 하지만 utillity를 사용할 땐 충돌할 수 있음(버전 업데이트가 안되있어서)

[3E]
IEnumerable, IQueryable, IObservable

[5S]
State -> Store(cache) --Stream(DataTransportObject객체)-->Stove(EntityFramework-백엔드Store)

[state]
Evulation  vs Excution
dynamic      static
Task           CPU = Thread-level

Observable  vs  List객체
ICollection        serialization
dictionary
Json packet

사용자 정의 컨트롤: 옛 방식, xaml을 포함함(무거움). 사용자 지정 컨트롤: 발전된 방향, 마크업과 비슷한 개념

항상 동적인(Real-Time) 코드를 고려하며 작업해야한다.
store을 많이 쓸 수록 무거워짐